{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["Geocode","setLanguage","setApiKey","useStyles","makeStyles","theme","createStyles","containerClass","backgroundColor","width","divClass","border","padding","paper","color","borderRadius","root","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","transform","transition","margin","spacing","txt","textAlign","fontWeight","txtField","marginBottom","map","height","topField","App","useState","error","setError","isLoaded","setIsLoaded","items","setItems","cordinates","setCordinates","cordinatesDel","setCordinatesDel","classes","useEffect","fetch","then","res","json","result","a","cords","cords_del","i","length","adr","pickup_address","line_1","postcode","postal_code","local","locality","address","fromAddress","response","cord","lat","results","geometry","location","lng","push","console","adr_del","delivery_address","postcode_del","local_del","address_del","className","toString","Grid","container","style","item","xs","Typography","variant","gutterBottom","index","Accordion","AccordionSummary","expandIcon","aria-controls","id","AccordionDetails","Paper","elevation","FormControl","disabled","InputLabel","htmlFor","Input","value","max_volume_m3","startAdornment","InputAdornment","position","reward","amount","toFixed","md","display","TextField","label","administrative_area","country_code","pickup","start","end","googleMapsApiKey","mapContainerStyle","center","zoom","delivery","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0c9f2c8f.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport EuroIcon from \"@material-ui/icons/Euro\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Geocode from \"react-geocode\";\r\nimport { GoogleMap, LoadScript, Marker } from \"@react-google-maps/api\";\r\n\r\nGeocode.setLanguage(\"en\");\r\nGeocode.setApiKey(\"AIzaSyB26A_1y8xU5rltpxP1CfE1PwqiA5W3YDs\");\r\n\r\ninterface IDelivery {\r\n  end: Date;\r\n  start: Date;\r\n}\r\n\r\ninterface IDeliveryAddress {\r\n  administrative_area: string;\r\n  country_code: string;\r\n  line_1: string;\r\n  locality: string;\r\n  postal_code: string;\r\n}\r\n\r\ninterface IPickup {\r\n  end: Date;\r\n  start: Date;\r\n}\r\n\r\ninterface IPickupAddress {\r\n  administrative_area: string;\r\n  country_code: string;\r\n  line_1: string;\r\n  locality: string;\r\n  postal_code: string;\r\n}\r\n\r\ninterface IReward {\r\n  amount: number;\r\n  currency: string;\r\n}\r\n\r\ninterface ITransport {\r\n  id: number;\r\n  delivery: IDelivery;\r\n  delivery_address: IDeliveryAddress;\r\n  max_volume_m3: number;\r\n  pickup: IPickup;\r\n  pickup_address: IPickupAddress;\r\n  reward: IReward;\r\n}\r\n\r\ninterface ICoordinates {\r\n  lat: number;\r\n  lng: number;\r\n}\r\n\r\nfunction App() {\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [isLoaded, setIsLoaded] = useState<boolean>(false);\r\n  const [items, setItems] = useState<ITransport[]>([]);\r\n  const [cordinates, setCordinates] = useState<ICoordinates[]>([]);\r\n  const [cordinatesDel, setCordinatesDel] = useState<ICoordinates[]>([]);\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    fetch(\r\n      \"https://brenger-interviews.s3.amazonaws.com/open_transport_jobs.json\"\r\n    )\r\n      .then((res) => res.json())\r\n      .then(\r\n        async (result) => {\r\n          setIsLoaded(true);\r\n          setItems(result);\r\n          let adr;\r\n          let postcode;\r\n          let local;\r\n          let cords: ICoordinates[] = [];\r\n\r\n          let adr_del;\r\n          let postcode_del;\r\n          let local_del;\r\n          let cords_del: ICoordinates[] = [];\r\n\r\n          for (let i = 0; i < result.length; i++) {\r\n            adr = result[i].pickup_address.line_1;\r\n            postcode = result[i].pickup_address.postal_code;\r\n            local = result[i].pickup_address.locality;\r\n\r\n            var address = adr + \" \" + postcode + \" \" + local;\r\n            await Geocode.fromAddress(address).then(\r\n              (response) => {\r\n                let lat = response.results[0].geometry.location.lat;\r\n                let lng = response.results[0].geometry.location.lng;\r\n                let cord = { lat, lng };\r\n                cords.push(cord);\r\n                return cords;\r\n              },\r\n              (error) => {\r\n                console.error(error);\r\n              }\r\n            );\r\n          }\r\n          for (let i = 0; i < result.length; i++) {\r\n            adr_del = result[i].delivery_address.line_1;\r\n            postcode_del = result[i].delivery_address.postal_code;\r\n            local_del = result[i].delivery_address.locality;\r\n\r\n            var address_del = adr_del + \" \" + postcode_del + \" \" + local_del;\r\n            await Geocode.fromAddress(address_del).then(\r\n              (response) => {\r\n                let lat = response.results[0].geometry.location.lat;\r\n                let lng = response.results[0].geometry.location.lng;\r\n                let cord = { lat, lng };\r\n                cords_del.push(cord);\r\n                return cords_del;\r\n              },\r\n              (error) => {\r\n                console.error(error);\r\n              }\r\n            );\r\n          }\r\n          setCordinates(cords);\r\n          setCordinatesDel(cords_del);\r\n        },\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      );\r\n  }, []);\r\n\r\n  useEffect(() => {}, [cordinatesDel, cordinates]);\r\n\r\n  if (error) {\r\n    return <div className={classes.root}>Error: {error.toString()}</div>;\r\n  } else if (!isLoaded) {\r\n    return <div className={classes.root}>Loading...</div>;\r\n  } else {\r\n    return (\r\n      <Grid container style={{ padding: 20 }}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h3\" gutterBottom style={{ textAlign: \"center\" }}>\r\n            Transport Jobs\r\n          </Typography>\r\n        </Grid>\r\n        {items.map((item, index) => (\r\n          <Grid item xs={12} key={item.id}>\r\n            <Accordion style={{ borderRadius: 0, backgroundColor: \"#3b82f6\" }}>\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon style={{ color: \"white\" }} />}\r\n                aria-controls=\"Transport-content\"\r\n                id=\"Transport-header\"\r\n              >\r\n                <Typography className={classes.heading}>\r\n                  Transport\r\n                  <span style={{ fontWeight: \"bold\" }}> {item.id}</span>\r\n                </Typography>\r\n                <Typography className={classes.secondaryHeading}>\r\n                  {item.pickup_address.locality} to{\" \"}\r\n                  {item.delivery_address.locality}\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <Grid container>\r\n                  <Grid\r\n                    item\r\n                    xs={6}\r\n                    style={{ marginBottom: 5 }}\r\n                    className={classes.transform}\r\n                  >\r\n                    <Paper className={classes.paper} elevation={3}>\r\n                      <FormControl className={classes.margin} disabled>\r\n                        <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                          max_volume_m3\r\n                        </InputLabel>\r\n                        <Input\r\n                          value={item.max_volume_m3}\r\n                          id=\"input-with-icon-adornment\"\r\n                          className={classes.topField}\r\n                          startAdornment={\r\n                            <InputAdornment position=\"start\">\r\n                              <SettingsIcon />\r\n                            </InputAdornment>\r\n                          }\r\n                        />\r\n                      </FormControl>\r\n                    </Paper>\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    xs={6}\r\n                    style={{ marginBottom: 5 }}\r\n                    className={classes.transform}\r\n                  >\r\n                    <Paper className={classes.paper} elevation={3}>\r\n                      <FormControl className={classes.margin} disabled>\r\n                        <InputLabel htmlFor=\"input-with-icon-adornment\">\r\n                          Reward\r\n                        </InputLabel>\r\n                        <Input\r\n                          value={item.reward.amount.toFixed(2)}\r\n                          id=\"input-with-icon-adornment\"\r\n                          className={classes.topField}\r\n                          startAdornment={\r\n                            <InputAdornment position=\"start\">\r\n                              <EuroIcon />\r\n                            </InputAdornment>\r\n                          }\r\n                        />\r\n                      </FormControl>\r\n                    </Paper>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6} className={classes.transform}>\r\n                    <Grid container className={classes.containerClass}>\r\n                      <Grid item xs={12} md={6} style={{ padding: 15 }}>\r\n                        <Typography\r\n                          variant=\"overline\"\r\n                          display=\"block\"\r\n                          gutterBottom\r\n                          className={classes.txt}\r\n                        >\r\n                          pickup location\r\n                        </Typography>\r\n                        <div className={classes.divClass}>\r\n                          <TextField\r\n                            id=\"pickup_address.line_1\"\r\n                            label=\"Pickup Address\"\r\n                            value={item.pickup_address.line_1}\r\n                            className={classes.txtField}\r\n                            disabled\r\n                          />\r\n                          <TextField\r\n                            id=\"pickup_address.postal_code\"\r\n                            label=\"Postal Code\"\r\n                            value={item.pickup_address.postal_code}\r\n                            className={classes.txtField}\r\n                            disabled\r\n                          />\r\n                          <TextField\r\n                            id=\"pickup_address.locality\"\r\n                            label=\"Locality\"\r\n                            value={item.pickup_address.locality}\r\n                            className={classes.txtField}\r\n                            disabled\r\n                          />\r\n                          <TextField\r\n                            id=\"pickup_address.administrative_area\"\r\n                            label=\"Are and Country Code\"\r\n                            value={\r\n                              item.pickup_address.administrative_area +\r\n                              \" - \" +\r\n                              item.pickup_address.country_code\r\n                            }\r\n                            className={classes.txtField}\r\n                            disabled\r\n                          />\r\n                        </div>\r\n                        <Typography\r\n                          variant=\"overline\"\r\n                          display=\"block\"\r\n                          gutterBottom\r\n                          className={classes.txt}\r\n                        >\r\n                          pickup date\r\n                        </Typography>\r\n                        <div className={classes.divClass}>\r\n                          <TextField\r\n                            id=\"pickup.start\"\r\n                            label=\"Start Date\"\r\n                            value={item.pickup.start}\r\n                            className={classes.txtField}\r\n                            disabled\r\n                          />\r\n                          <TextField\r\n                            id=\"pickup.end\"\r\n                            label=\"End Date\"\r\n                            value={item.pickup.end}\r\n                            className={classes.txtField}\r\n                            disabled\r\n                          />\r\n                        </div>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={6} className={classes.map}>\r\n                        <LoadScript googleMapsApiKey=\"AIzaSyB26A_1y8xU5rltpxP1CfE1PwqiA5W3YDs\">\r\n                          <GoogleMap\r\n                            mapContainerStyle={{\r\n                              width: \"100%\",\r\n                              height: \"100%\",\r\n                            }}\r\n                            center={{\r\n                              lat:\r\n                                cordinates.length === 0\r\n                                  ? 0\r\n                                  : cordinates[index].lat,\r\n                              lng:\r\n                                cordinates.length === 0\r\n                                  ? 0\r\n                                  : cordinates[index].lng,\r\n                            }}\r\n                            zoom={15}\r\n                          >\r\n                            <Marker\r\n                              key={item.id}\r\n                              position={{\r\n                                lat:\r\n                                  cordinates.length === 0\r\n                                    ? 0\r\n                                    : cordinates[index].lat,\r\n                                lng:\r\n                                  cordinates.length === 0\r\n                                    ? 0\r\n                                    : cordinates[index].lng,\r\n                              }}\r\n                            />\r\n                          </GoogleMap>\r\n                        </LoadScript>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={6} className={classes.transform}>\r\n                    <Grid container className={classes.containerClass}>\r\n                      <Grid item xs={12} md={6} style={{ padding: 15 }}>\r\n                        <Typography\r\n                          variant=\"overline\"\r\n                          display=\"block\"\r\n                          gutterBottom\r\n                          className={classes.txt}\r\n                        >\r\n                          delivery location\r\n                        </Typography>\r\n                        <div className={classes.divClass}>\r\n                          <TextField\r\n                            id=\"delivery_address.line_1\"\r\n                            label=\"Delivery Address\"\r\n                            value={item.delivery_address.line_1}\r\n                            className={classes.txtField}\r\n                            disabled\r\n                          />\r\n                          <TextField\r\n                            id=\"delivery_address.postal_code\"\r\n                            label=\"Postal Code\"\r\n                            value={item.delivery_address.postal_code}\r\n                            className={classes.txtField}\r\n                            disabled\r\n                          />\r\n                          <TextField\r\n                            id=\"delivery_address.locality\"\r\n                            label=\"Locality\"\r\n                            value={item.delivery_address.locality}\r\n                            className={classes.txtField}\r\n                            disabled\r\n                          />\r\n                          <TextField\r\n                            id=\"delivery_address.administrative_area\"\r\n                            label=\"Are and Country Code\"\r\n                            value={\r\n                              item.delivery_address.administrative_area +\r\n                              \" - \" +\r\n                              item.delivery_address.country_code\r\n                            }\r\n                            className={classes.txtField}\r\n                            disabled\r\n                          />\r\n                        </div>\r\n                        <Typography\r\n                          variant=\"overline\"\r\n                          display=\"block\"\r\n                          gutterBottom\r\n                          className={classes.txt}\r\n                        >\r\n                          delivery date\r\n                        </Typography>\r\n                        <div className={classes.divClass}>\r\n                          <TextField\r\n                            id=\"delivery.start\"\r\n                            label=\"Start Date\"\r\n                            value={item.delivery.start}\r\n                            className={classes.txtField}\r\n                            disabled\r\n                          />\r\n                          <TextField\r\n                            id=\"delivery.end\"\r\n                            label=\"End Date\"\r\n                            value={item.delivery.end}\r\n                            className={classes.txtField}\r\n                            disabled\r\n                          />\r\n                        </div>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={6} className={classes.map}>\r\n                        <LoadScript googleMapsApiKey=\"AIzaSyB26A_1y8xU5rltpxP1CfE1PwqiA5W3YDs\">\r\n                          <GoogleMap\r\n                            mapContainerStyle={{\r\n                              width: \"100%\",\r\n                              height: \"100%\",\r\n                            }}\r\n                            center={{\r\n                              lat:\r\n                                cordinatesDel.length === 0\r\n                                  ? 0\r\n                                  : cordinatesDel[index].lat,\r\n                              lng:\r\n                                cordinatesDel.length === 0\r\n                                  ? 0\r\n                                  : cordinatesDel[index].lng,\r\n                            }}\r\n                            zoom={15}\r\n                          >\r\n                            <Marker\r\n                              key={item.id}\r\n                              position={{\r\n                                lat:\r\n                                  cordinatesDel.length === 0\r\n                                    ? 0\r\n                                    : cordinatesDel[index].lat,\r\n                                lng:\r\n                                  cordinatesDel.length === 0\r\n                                    ? 0\r\n                                    : cordinatesDel[index].lng,\r\n                              }}\r\n                            />\r\n                          </GoogleMap>\r\n                        </LoadScript>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    containerClass: {\r\n      backgroundColor: \"aliceblue\",\r\n      width: \"99.5%\",\r\n    },\r\n    divClass: {\r\n      border: \"2px solid\",\r\n      padding: 10,\r\n    },\r\n    paper: {\r\n      // padding: 5,\r\n      // textAlign: 'center',\r\n      color: \"black\",\r\n      width: \"99.5%\",\r\n      borderRadius: 0,\r\n      backgroundColor: \"aliceblue\",\r\n    },\r\n    root: {\r\n      width: \"100%\",\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      flexBasis: \"45%\",\r\n      flexShrink: 0,\r\n      color: \"white\",\r\n    },\r\n    secondaryHeading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      color: \"white\",\r\n    },\r\n    transform: {\r\n      \"&:hover\": {\r\n        transform: \"scale(1.02)\",\r\n        transition: \"all 0.2s ease-in-out\",\r\n      },\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n      width: \"100%\",\r\n    },\r\n    txt: {\r\n      textAlign: \"center\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    txtField: {\r\n      width: \"100%\",\r\n      marginBottom: 10,\r\n      \"& .MuiInputBase-root.Mui-disabled\": {\r\n        color: \"black\",\r\n      },\r\n    },\r\n    map: {\r\n      \"@media only screen and (max-width: 1000px)\": {\r\n        height: 300,\r\n        // padding: 30\r\n      },\r\n    },\r\n    topField:{\r\n      width: \"98%\"\r\n    }\r\n  })\r\n);\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}